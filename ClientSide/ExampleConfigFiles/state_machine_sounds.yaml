Info: # "Info" configuration options can be overridden by command line options
  MouseID: V1A1 # Used to name saved data file
  Note: '' # Added in a block at the start of saved data file
  Session: '' # This is added to default (date and time)
  TaskType: Moana Classical Conditioning

Preferences:
  HeartBeat: 1000 # The interval at which a heart-beat info message is printed to screen (in ms) 
  RandomSeed: 345
  LogCommands: True
  EnableSound: True

GPIO: # A list of GPIO pins used in the task
  Reward1:
    Number: 1
    Type: 'Output'
    Mirror: True # The 'Mirror' option is for 'Output' type GPIOs. It configures whether the associated Aux-GPIO pin is raised/lowered 
                 # whenver the GPIO itself is. The Aux-GPIO is connected to an LED, which allows for visualization of the GPIO state.
  Reward2:
    Number: 2
    Type: 'Output'
    Mirror: True # The 'Mirror' option is for 'Output' type GPIOs. It configures whether the associated Aux-GPIO pin is raised/lowered 
                 # whenver the GPIO itself is. The Aux-GPIO is connected to an LED, which allows for visualization of the GPIO state.

Maze:
  Type: 'StateMachine' # VR or physical

StateMachine:
  States:
    HighNoise:
      Type: 'SetSoundState'
      Params:
        Value: 'On'
        Sound: 'PinkNoise'
      NextState: 'Pause1'
    Pause1:
      Type: 'Delay'
      Params:
        Duration: 'Fixed'
        Value: 1000
      NextState: 'Reward1'
    Reward1:
        Type: 'Reward'   # Note, the next state better be longer than the "PumpRunTime" or wierd stuff could happen!
        NextState: 'Pause2'
        Params:
          RewardSound: 'RewardSound1' # The name of the auditory stimulus (of type "Beep") which should be played 
          DispensePin: 'Reward1' # (Required!) Label of GPIO for output pin which should trigger reward dispensing. 
          PumpRunTime: 300 # How long to run the reward pump for. Note that the Beep duration is specified in its config
    Pause2:
      Type: 'Delay'
      Params:
        Duration: 'Fixed'
        Value: 500
      NextState: 'LowNoise'
    LowNoise:
      Type: 'SetSoundState'
      Params:
        Value: 'Off'
        Sound: 'PinkNoise'
      NextState: 'Pause3'
    Pause3:
      Type: 'Delay'
      Params:
        Duration: 'Fixed'
        Value: 1000
      NextState: 'Reward2'
    Reward2:
        Type: 'Reward'   # Note, the next state better be longer than the "PumpRunTime" or wierd stuff could happen!
        NextState: 'Pause4'
        Params:
          RewardSound: 'RewardSound2' # The name of the auditory stimulus (of type "Beep") which should be played 
          DispensePin: 'Reward2' # (Required!) Label of GPIO for output pin which should trigger reward dispensing. 
          PumpRunTime: 300 # How long to run the reward pump for. Note that the Beep duration is specified in its config
    Pause4:
      Type: 'Delay'
      Params:
        Duration: 'Fixed'
        Value: 500
      NextState: 'HighNoise'

AuditoryStimuli:
  AudioFileDirectory: '/home/ckemere/Code/TreadmillIO/ClientSide/Sounds'
  StimuliList:
    PinkNoise: # This label is abitrary. In the case of "Beep" stimuli, it is used to configure Reward
      MinimixInputPort: 1 # jackminimix channel to use. By default, these will be auto-assigned if not specified
      MinimixChannel: 'left' # stereo audio channel whose volume should be controlled for this stimulus
      Type: 'Background' # Stimuli type - 'Localized', 'Background', or 'Beep'
      BaselineGain: 0.0
      Filename: 'pink_noise.wav'
      Color: 'pink' # Matplotlib color name used for visualization system
    RewardSound1:
      Type: 'Beep'
      Filename: 'tone_3kHz.wav'
      BaselineGain: 0.0
      Duration: 250 # ms
    RewardSound2:
      Type: 'Beep'
      Filename: 'tone_7kHz.wav'
      BaselineGain: 0.0
      Duration: 250 # ms


