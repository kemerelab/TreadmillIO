# Notes:
# - I need to smooth poke sensor for patch entry/exit. This could be the biggest
#   challenge in the current form because I can't think of an easy way to do this
#   using generic state transitions.
# - This assumes that all reward volumes are the same, as opposed to varying
#   reward volume based on bucket volume (i.e. max(min(V_current, V_max), V_min)).
#   I prefer fixed volume sizes because then only time between rewards
#   is variable, whereas in the latter case both reward size and time between
#   rewards are variable.
# - Turning off the RewardSound automatically after dispensing a reward may lead
#   to very short gaps between the stimulus if multiple rewards are available in
#   succession. I don't think this will be much of a problem, though.
# - ConditionalNextStates should be checked prior to NextState.
# - I added what I think could be useful configs for multiple audio I/Os.
# - The "hacky" departures from using simplistic, low-level states are:
#   - A more complex "Patch" type state that computes when rewards are available.
#   - A "Reset" value for resetting the patch internal clock.
#   - Probably whatever we need to smooth the poke sensors.

Info: # "Info" configuration options can be overridden by command line options
  MouseID: V1A1 # Used to name saved data file
  Note: '' # Added in a block at the start of saved data file
  Session: '' # This is added to default (date and time)
  TaskType: Moana Classical Conditioning

Preferences:
  HeartBeat: 1000 # The interval at which a heart-beat info message is printed to screen (in ms) 
  RandomSeed: 345
  LogCommands: True
  EnableSound: True

GPIO: # A list of GPIO pins used in the task
  Reward1:
    Number: 1
    Type: 'Output'
    Mirror: True # The 'Mirror' option is for 'Output' type GPIOs. It configures whether the associated Aux-GPIO pin is raised/lowered 
                 # whenver the GPIO itself is. The Aux-GPIO is connected to an LED, which allows for visualization of the GPIO state.
  Reward2:
    Number: 2
    Type: 'Output'
    Mirror: True # The 'Mirror' option is for 'Output' type GPIOs. It configures whether the associated Aux-GPIO pin is raised/lowered 
                 # whenver the GPIO itself is. The Aux-GPIO is connected to an LED, which allows for visualization of the GPIO state.
  Poke1:
    Number: 3
    Type: 'Output'
  Poke2:
    Number: 4
    Type: 'Output'
  Lick1:
    Number: 5
    Type: 'Output'
  Lick2:
    Number: 6
    Type: 'Output'

Maze:
  Type: 'StateMachine' # VR or physical

StateMachine:
  States:
    InitialState: # either patch available
      FirstState: True
      Type: 'SetSoundState'
      Params:
        InterpatchSound1: 'Off'
        InPatchSound1: 'On'
        RewardSound1: 'Off'
        InterpatchSound2: 'Off'
        InPatchSound2: 'On'
        RewardSound2: 'Off'
      NextState:
        InitialPatch1:
          ConditionType: 'GPIO'
          Pin: 3 #'Poke1'
          Value: True
        InitialPatch2:
          ConditionType: 'GPIO'
          Pin: 4 #'Poke2'
          Value: True
    InitialPatch1:
      Type: 'SetSoundState'
      Params:
        InPatchSound2: 'Off'
      NextState: 'InPatch1-Enter'
    InitialPatch2:
      Type: 'SetSoundState'
      Params:
        InPatchSound1: 'Off'
      NextState: 'InPatch2-Enter'
    Interpatch1: # going from reward zone 1 to 2
      Type: 'SetSoundState'
      Params: # allow single value or list format; not sure if this is best syntax
        InPatchSound1: 'Off'
        RewardSound1: 'Off'
        InterpatchSound1: 'On'
        InPatchSound2: 'On'
      NextState: 
        Interpatch1:
          ConditionType: 'None'
          Priority: 0
        InPatch2-Enter:
          ConditionType: 'GPIO'
          Pin: 4 #'Poke2'
          Value: True
          Priority: 1
    InPatch2-Enter:
      Type: 'SetInternalState'
      Params:
        State: 'InPatch2-Waiting'
        InternalState: 'NewPatch'
        Value: True # will call reset function 
      NextState: 'InPatch2-Transition'
    InPatch2-Transition: # turn off InterpatchSound at Speaker1 
                         # (and RewardSound at Speaker2 if playing)
      Type: 'SetSoundState'
      Params:
        InterpatchSound1: 'Off'
        RewardSound2: 'Off'
      NextState: 'InPatch2-Waiting'
    InPatch2-Waiting: # reward zone 2
      Type: 'Patch'
      Params:
        ModelType: 'Exponential' # or stochastic models like Poisson, etc. 
        ModelParams: # list of params for specific model type
          tau: # time constant
            Distribution: 'Uniform'  
            Low: 10.0
            High: 15.0
          r0: # initial decay rate
            Distribution: 'Uniform'
            Low: 0.5
            High: 2.0
        SwitchRate: 0.1
      NextState: 
        InPatch2-Waiting:
          ConditionType: 'None'
          Priority: 0
        InPatch2-Available: # reward available
          ConditionType: 'Reward' # require all patches to have this
          Value: 2.0 # threshold size of available reward
          Priority: 1
        Interpatch2: # leave patch
          # TODO: need to incorporate smoothing poke sensor
          ConditionType: 'GPIO'
          Pin: 4 #'Poke2'
          Value: False
          Priority: 2
    InPatch2-Available: # play reward sound when reward available
      Type: 'SetSoundState'
      Params:
        RewardSound2: 'On'
      NextState:
        InPatch2-Available:
          ConditionType: 'None'
          Priority: 0
        InPatch2-Reward: # dispense reward if lick 
          ConditionType: 'GPIO'
          Pin: 6 #'Lick2'
          Value: True
          Priority: 1
        Interpatch2: # leave patch
          # TODO: need to incorporate smoothing poke sensor
          ConditionType: 'GPIO'
          Pin: 4 #'Poke2'
          Value: False
          Priority: 2
    InPatch2-Reward: # dispense reward
      Type: 'Reward'
      Params:
          DispensePin: 'Reward2'
          PumpRunTime: 100
      NextState: 'InPatch2-Update'
    InPatch2-Update: # update total reward
      Type: 'SetInternalState'
      Params:
        State: 'InPatch2-Waiting'
        InternalState: 'RewardHarvest'
        Value: 2.0
      NextState: 'InPatch2-Transition'

    Interpatch2: # going from reward zone 2 to 1
      Type: 'SetSoundState'
      Params: # allow single value or list format; not sure if this is best syntax
        InPatchSound2: 'Off'
        RewardSound2: 'Off'
        InterpatchSound2: 'On'
        InPatchSound1: 'On'
      NextState: 
        Interpatch2:
          ConditionType: 'None'
          Priority: 0
        InPatch1-Enter:
          ConditionType: 'GPIO'
          Pin: 3 #'Poke1'
          Value: True
    InPatch1-Enter: # reset clock for patch
      Type: 'SetInternalState'
      Params:
        State: 'InPatch1-Waiting'
        InternalState: 'NewPatch'
        Value: True # will call reset function 
      NextState: 'InPatch1-Transition'
    InPatch1-Transition: # turn off InterpatchSound at Speaker2 
                         # (and RewardSound at Speaker1 if playing)
      Type: 'SetSoundState'
      Params:
        InterpatchSound2: 'Off'
        RewardSound1: 'Off'
      NextState: 'InPatch1-Waiting'
    InPatch1-Waiting: # reward zone 1
      Type: 'Patch'
      Params:
        ModelType: 'Poisson' 
        ModelParams: # list of params for specific model type
          tau: # decay rate for lambda (example of uniform dist)
            Distribution: 'Uniform'
            Low: 10.0
            High: 15.0
          V0: 0.5 # drip size (example of fixed value)
          lambda0: # initial rate for Poisson process (example of log-uniform dist)
            Distribution: 'LogUniform'
            Low: 1.0
            High: 2.0
        SwitchRate: 0.1
      NextState: 
        InPatch1-Waiting:
          ConditionType: 'None'
          Priority: 0
        InPatch1-Available: # reward available
          ConditionType: 'Reward' # require all patches to have this
          Value: 2.0 # threshold size of available reward
          Priority: 1
        Interpatch1: # leave patch
          # TODO: need to incorporate smoothing poke sensor
          ConditionType: 'GPIO'
          Pin: 3 #'Poke1'
          Value: False
          Priority: 2
    InPatch1-Available: # play reward sound when reward available
      Type: 'SetSoundState'
      Params:
        RewardSound1: 'On'
      NextState:
        InPatch1-Reward: # dispense reward if lick
          ConditionType: 'GPIO'
          Pin: 5 #'Lick1'
          Value: 'On'
        Interpatch1: # leave patch
          # TODO: need to incorporate smoothing poke sensor
          ConditionType: 'GPIO'
          Pin: 3 #'Poke1'
          Value: False
    InPatch1-Reward: # dispense reward
      Type: 'Reward'
      Params:
          DispensePin: 'Reward1'
          PumpRunTime: 100
      NextState: 'InPatch1-Update'
    InPatch1-Update: # update total reward
      Type: 'SetInternalState'
      Params:
        State: 'InPatch1-Waiting'
        InternalState: 'RewardHarvest'
        Value: 2.0
      NextState: 'InPatch1-Transition'


AuditoryStimuli:
  AudioFileDirectory: '/home/james/Documents/Projects/behavior_system/TreadmillIO/ClientSide/Sounds'
  StimuliList:
    InterpatchSound1: # This label is abitrary. In the case of "Beep" stimuli, it is used to configure Reward
      Type: 'Background' # Stimuli type - 'Localized', 'Background', or 'Beep'
      Filename: 'pink_noise.wav'
      MinimixerInputPort: 1 # minimixer channel input
      BaselineGain: 0.0
      Device: 'Speaker1' # or single device, or list of devices
      Color: 'pink' # Matplotlib color name used for visualization system
    InterpatchSound2: # This label is abitrary. In the case of "Beep" stimuli, it is used to configure Reward
      Type: 'Background' # Stimuli type - 'Localized', 'Background', or 'Beep'
      Filename: 'pink_noise.wav'
      MinimixerInputPort: 1 # minimixer channel input
      BaselineGain: 0.0
      Device: 'Speaker2'
      Color: 'pink' # Matplotlib color name used for visualization system
    InPatchSound1: # This label is abitrary. In the case of "Beep" stimuli, it is used to configure Reward
      Type: 'Background' # Stimuli type - 'Localized', 'Background', or 'Beep'
      Filename: 'tone_cloud.wav'
      MinimixerInputPort: 2 # minimixer channel input
      BaselineGain: 0.0
      Device: 'Speaker1'
      Color: 'pink' # Matplotlib color name used for visualization system
    InPatchSound2: # This label is abitrary. In the case of "Beep" stimuli, it is used to configure Reward
      Type: 'Background' # Stimuli type - 'Localized', 'Background', or 'Beep'
      Filename: 'tone_cloud.wav'
      MinimixerInputPort: 2 # minimixer channel input
      BaselineGain: 0.0
      Device: 'Speaker2'
      Color: 'pink' # Matplotlib color name used for visualization system
    RewardSound1:
      Type: 'Background'
      Filename: 'tone_3kHz.wav'
      MinimixerInputPort: 3 # minimixer channel input
      BaselineGain: 0.0
      Device: 'Speaker1'
    RewardSound2:
      Type: 'Background'
      Filename: 'tone_3kHz.wav'
      MinimixerInputPort: 3 # minimixer channel input
      BaselineGain: 0.0
      OffGain: -90.0
      Device: 'Speaker2' # or single device, or list of devicess
  DeviceList:
    Speaker1:
      Type: 'Output' # Input or Output
      ClientName: 'system' # host name of JACK device (default system)
      PortName: 'playback_1' # port name on JACK device (default capture, playback)
      OscPort: 12000 # OSC port for associated minimixer
      MinimixerChannel: 'left'
      Record: True # record signal to/from device with jack_capture?
    Speaker2:
      Type: 'Output'
      ClientName: 'system'
      PortName: 'playback_2'
      OscPort: 12001
      MinimixerChannel: 'left'
      Record: True
    Microphone1:
      Type: 'Input'
      ClientName: 'system'
      PortName: 'capture_1'
      Record: True
    Microphone2:
      Type: 'Input'
      ClientName: 'system'
      PortName: 'capture_2'
      Record: True